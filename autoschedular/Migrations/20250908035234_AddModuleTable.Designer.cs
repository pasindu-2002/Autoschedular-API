// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using autoschedular.Model;

#nullable disable

namespace autoschedular.Migrations
{
    [DbContext(typeof(AutoSchedularDbContext))]
    [Migration("20250908035234_AddModuleTable")]
    partial class AddModuleTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("autoschedular.Model.Batch", b =>
                {
                    b.Property<string>("BatchCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseDirector")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BatchCode");

                    b.HasIndex("CourseCode");

                    b.HasIndex("CourseDirector");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("autoschedular.Model.Course", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CourseCode");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("autoschedular.Model.Lecturer", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpNo");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("autoschedular.Model.Module", b =>
                {
                    b.Property<string>("ModuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ModuleHours")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ModuleCode");

                    b.HasIndex("CourseCode");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("autoschedular.Model.PoStaff", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpNo");

                    b.ToTable("PoStaffs");
                });

            modelBuilder.Entity("autoschedular.Model.Student", b =>
                {
                    b.Property<string>("StuId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StuId");

                    b.HasIndex("BatchCode");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("autoschedular.Model.Batch", b =>
                {
                    b.HasOne("autoschedular.Model.Course", "Course")
                        .WithMany("Batches")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("autoschedular.Model.Lecturer", "Lecturer")
                        .WithMany("Batches")
                        .HasForeignKey("CourseDirector")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("autoschedular.Model.Module", b =>
                {
                    b.HasOne("autoschedular.Model.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("autoschedular.Model.Student", b =>
                {
                    b.HasOne("autoschedular.Model.Batch", "Batch")
                        .WithMany("Students")
                        .HasForeignKey("BatchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("autoschedular.Model.Batch", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("autoschedular.Model.Course", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("autoschedular.Model.Lecturer", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
